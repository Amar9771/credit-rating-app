import streamlit as st
import joblib
import numpy as np
import pandas as pd

# —————————————————————
# Custom CSS for borders, sizing, and spacing
# —————————————————————
st.markdown("""
<style>
/* TITLES */
.title-container {
    border: 2px solid #4CAF50;
    padding: 20px 10px;
    border-radius: 15px;
    text-align: center;
    background-color: #f9f9f9;
    margin-bottom: 20px;
}

/* MAIN CONTENT BOX */
.content-box {
    border: 2px solid #4CAF50;
    padding: 20px;
    border-radius: 15px;
    background-color: #ffffff;
    margin-bottom: 20px;
}

/* SHRINK INPUT FIELDS */
[data-testid="stTextInput"] input,
[data-testid="stNumberInput"] input,
[data-testid="stSelectBox"] select {
    max-width: 300px;  /* adjust this value to shrink/grow */
}

/* BUTTON ROUNDED */
.stButton>button {
    border-radius: 8px;
    padding: 8px 16px;
}
</style>
""", unsafe_allow_html=True)

# —————————————————————
# Page configuration & Title
# —————————————————————
st.set_page_config(page_title="Credit Rating Predictor", layout="centered")
st.markdown('<div class="title-container"><h1>🏦 Credit Rating Predictor</h1></div>', unsafe_allow_html=True)

# —————————————————————
# Load model & encoders
# —————————————————————
model = joblib.load('credit_rating_model.pkl')
rating_encoder = joblib.load('rating_encoder.pkl')
issuer_encoder = joblib.load('issuer_encoder.pkl')
industry_encoder = joblib.load('industry_encoder.pkl')

# —————————————————————
# Load Historical Data
# —————————————————————
historical_data_path = r'F:\credit_rating_app\Simulated_CreditRating_Data.csv'
try:
    historical_data = pd.read_csv(historical_data_path)
    with st.expander("📜 Show Historical Data"):
        st.dataframe(historical_data)
except FileNotFoundError:
    st.warning("⚠️ Historical data file not found. New predictions will still work.")

# —————————————————————
# Input Form in Two Columns
# —————————————————————
st.markdown('<div class="content-box">', unsafe_allow_html=True)
col1, col2 = st.columns([1, 2])

with col1:
    issuer_name = st.text_input("Issuer Name")
    industry    = st.selectbox("Industry", sorted(industry_encoder.classes_))

with col2:
    debt_to_equity    = st.number_input("Debt to Equity Ratio", step=0.01)
    ebitda_margin     = st.number_input("EBITDA Margin (%)", step=0.01)
    interest_coverage = st.number_input("Interest Coverage Ratio", step=0.01)
    issue_size        = st.number_input("Issue Size (in ₹ Crores)", step=1.0)

st.markdown('</div>', unsafe_allow_html=True)

# —————————————————————
# Prediction Logic
# —————————————————————
if st.button("Predict Credit Rating"):
    try:
        # Handle unseen issuer gracefully
        if issuer_name not in issuer_encoder.classes_:
            st.warning(f"⚠️ Issuer '{issuer_name}' not in encoder – predicting with placeholder index.")
            issuer_encoded = -1
        else:
            issuer_encoded = issuer_encoder.transform([issuer_name])[0]

        industry_encoded = industry_encoder.transform([industry])[0]

        X = np.array([[debt_to_equity,
                       ebitda_margin,
                       interest_coverage,
                       issue_size,
                       issuer_encoded,
                       industry_encoded]])
        y_pred = model.predict(X)
        rating = rating_encoder.inverse_transform(y_pred)[0]

        st.success(f"🎯 Predicted Credit Rating: **{rating}**")

        # Append to CSV
        new_row = pd.DataFrame({
            'Issuer Name':       [issuer_name],
            'Industry':          [industry],
            'Debt to Equity':    [debt_to_equity],
            'EBITDA Margin':     [ebitda_margin],
            'Interest Coverage': [interest_coverage],
            'Issue Size (₹Cr)':  [issue_size],
            'Predicted Rating':  [rating]
        })
        new_row.to_csv(historical_data_path, mode='a', header=False, index=False)

    except Exception as e:
        st.error(f"❌ Prediction error: {e}")

# —————————————————————
# Footer
# —————————————————————
st.markdown("""
<div class="content-box" style="text-align:center;">
    Powered by 🧑‍💻 Streamlit | 📊 Credit Rating Predictor
</div>
""", unsafe_allow_html=True)
